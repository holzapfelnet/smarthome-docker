version: '3'

services:
    mqtt:
        restart: always
        expose:
            - "1883"
            - "9001"
        ports:
            - "1883:1883"
            - "9001:9001"
        build: ./mqtt
        networks:
            - smarthome-network
        volumes:
            - ~/smarthome-docker/container/mqtt/config/:/mosquitto/config/
            - ~/smarthome-docker/container/mqtt/log/:/mosquitto/log/
            - ~/smarthome-docker/container/mqtt/data/:/mosquitto/data/
        environment:
            TZ: Europe/Berlin

    nodered:
        restart: always
        expose:
            - "1880"
            - "2048"
            - "2049"
        ports:
            - "1880:1880"
            - "2048:2048"
            - "2049:2049"
        build: ./nodered
        user: "1000:1000"
        volumes:
            - ~/smarthome-docker/container/nodered/data/:/data/
        networks:
            - smarthome-network
        environment:
            TZ: Europe/Berlin
        depends_on:
            - "mqtt"

    homebridge:
        restart: always
        build: ./homebridge
        volumes:
            - ~/smarthome-docker/container/homebridge:/homebridge
        network_mode: host
        environment:
             - PGID=1000
             - PUID=1000
             - HOMEBRIDGE_CONFIG_UI=1
             - HOMEBRIDGE_CONFIG_UI_PORT=8080
             - TZ=Europe/Berlin
        depends_on:
            - "mqtt"

    influxdb:
        restart: always
        image: influxdb:latest
        volumes:
            - ~/smarthome-docker/container/influxdb:/var/lib/influxdb
        expose:
            - "8086"
        ports:
            - "8086:8086"
        networks:
            - smarthome-network
        environment:
            INFLUXDB_DB: smarthome
            INFLUXDB_USER: telegraf
            INFLUXDB_USER_PASSWORD: telegraf
            INFLUXDB_ADMIN_USER: admin
            INFLUXDB_ADMIN_PASSWORD: secret
            INFLUXDB_HTTP_FLUX_ENABLED: "true"
            TZ: Europe/Berlin
        
    grafana:
        restart: always
        image: grafana/grafana:latest
        user: "1000:1000"
        volumes:
            - ~/smarthome-docker/container/grafana:/var/lib/grafana
        expose:
            - "3000"
        ports:
            - "3000:3000"
        networks:
            - smarthome-network
        environment:
           GF_SECURITY_ALLOW_EMBEDDING: "true"
           GF_AUTH_ANONYMOUS_ENABLED: "true"
           TZ: Europe/Berlin
        depends_on:
            - "influxdb"

    telegraf:
        restart: always
        image: telegraf:latest
        user: "1000:1000"
        volumes:
            - ~/smarthome-docker/container/telegraf:/etc/telegraf
        networks:
            - smarthome-network
        environment:
            TZ: Europe/Berlin
        depends_on:
            - "mqtt"
            - "influxdb"

    deconz:
        restart: always
        image: marthoc/deconz
        expose:
            - "4000"
            - "4443"
        ports:
            - "4000:4000"
            - "4443:4443"
        privileged: true
        devices:
            - /dev/ttyACM0:/dev/ttyACM0
        volumes:
            - ~/smarthome-docker/container/deCONZ:/root/.local/share/dresden-elektronik/deCONZ
        networks:
            - smarthome-network
        environment:
            DECONZ_DEVICE: /dev/ttyACM0
            DECONZ_WEB_PORT: 4000
            DECONZ_WS_PORT: 4443
            TZ: Europe/Berlin

    redis:
        image: redis
        ports:
          - "6379:6379"
        volumes:
          - ~/smarthome-docker/container/redis/data:/data
        networks:
          - smarthome-network
        entrypoint: redis-server --appendonly yes
        restart: always
    
    heimdall: 
        image: lscr.io/linuxserver/heimdall
        container_name: heimdall
        environment:
           - PUID=1000
           - PGID=1000
           - TZ=Europe/Berlin
        volumes:
           - ~/smarthome-docker/container/heimdall/config:/config
        ports:
           - 443:443

    iobroker:
        privileged: true
        restart: always
        image: buanet/iobroker:latest
        container_name: iobroker
        hostname: iobroker
        ports:
           - "8081:8081"
        volumes:
           - ~/smarthome-docker/container/iobrokerdata:/opt/iobroker

networks:
    smarthome-network:
        driver: bridge
